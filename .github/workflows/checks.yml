name: Checks

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - uses: Gr1N/setup-poetry@v8

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - run: |
          poetry --version
          poetry install --no-root

      - name: Retrieve all changed Python files
        id: changed-python-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
              **.py

      - name: Printing the changed Python files
        if: steps.changed-python-files.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-python-files.outputs.all_changed_files }}
        run: |
          for file in ${CHANGED_FILES}; do
            echo "$file was changed"
          done
    
      - name: isort
        if: steps.changed-python-files.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-python-files.outputs.all_changed_files }}
        run: |
          for file in ${CHANGED_FILES}; do
            poetry run isort $file
          done

      - name: black
        if: steps.changed-python-files.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-python-files.outputs.all_changed_files }}
        run: |
          for file in ${CHANGED_FILES}; do
            poetry run black $file
          done

      - name: flake8
        if: steps.changed-python-files.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-python-files.outputs.all_changed_files }}
        run: |
          for file in ${CHANGED_FILES}; do
            poetry run flake8 $file
          done

      - name: mypy
        if: steps.changed-python-files.outputs.any_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.changed-python-files.outputs.all_changed_files }}
        run: |
          for file in ${CHANGED_FILES}; do
            poetry run mypy $file
          done
      
      - name: Check if any change is required
        if: steps.changed-python-files.outputs.any_changed == 'true'
        run: |
          changed_files=$(git status --porcelain)
          if [ ! -z "$changed_files" ]
          then
              echo "Modificações encontradas:"
              echo $changed_files
              echo ""
              echo "Favor corrigir as alterações apontadas antes de prosseguir com o PR."
              exit 1
          else
              echo "Não houveram modificações"
          fi

      - name: Run tests
        run: |
          poetry run pytest tests/